//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ASM.BD.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class WASMCOMEntities : DbContext
    {
        public WASMCOMEntities()
            : base("name=WASMCOMEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<clReclamaciones> clReclamaciones { get; set; }
        public DbSet<clTiposReclamacion> clTiposReclamacion { get; set; }
        public DbSet<clTiposTrackingReclamacion> clTiposTrackingReclamacion { get; set; }
        public DbSet<clTrackingReclamacion> clTrackingReclamacion { get; set; }
        public DbSet<tplazas> tplazas { get; set; }
        public DbSet<texp_codbar_cli> texp_codbar_cli { get; set; }
        public DbSet<texpdetalle> texpdetalle { get; set; }
        public DbSet<TExpDetalle2> TExpDetalle2 { get; set; }
        public DbSet<texpediciones> texpediciones { get; set; }
        public DbSet<expediciones> expediciones { get; set; }
        public DbSet<ExpedicionesResumen> ExpedicionesResumen { get; set; }
        public DbSet<texpestado> texpestado { get; set; }
        public DbSet<tslrEstados> tslrEstados { get; set; }
        public DbSet<tslrExpediciones> tslrExpediciones { get; set; }
        public DbSet<tslrRecogidas> tslrRecogidas { get; set; }
        public DbSet<tslrReferencias> tslrReferencias { get; set; }
        public DbSet<tslrSeguimiento> tslrSeguimiento { get; set; }
        public DbSet<treferencias> treferencias { get; set; }
        public DbSet<tclientes> tclientes { get; set; }
        public DbSet<tclientes_red> tclientes_red { get; set; }
        public DbSet<pnlBonificaciones> pnlBonificaciones { get; set; }
        public DbSet<pnlExpediciones> pnlExpediciones { get; set; }
        public DbSet<pnlSlRecogidas> pnlSlRecogidas { get; set; }
        public DbSet<pnlTipos> pnlTipos { get; set; }
        public DbSet<tPdaPosiciones> tPdaPosiciones { get; set; }
        public DbSet<webContactos> webContactos { get; set; }
        public DbSet<webContactosTracking> webContactosTracking { get; set; }
        public DbSet<trepartidores> trepartidores { get; set; }
        public DbSet<tReparto> tReparto { get; set; }
        public DbSet<tRepartoHojas> tRepartoHojas { get; set; }
        public DbSet<geoPlazas> geoPlazas { get; set; }
    
        public virtual int stpExpInsertaEstado(Nullable<short> codplaza_org, Nullable<int> codexp, Nullable<short> codestado, string informacion, Nullable<System.DateTime> fecha, Nullable<short> codplaza_ano, Nullable<int> codusuario_ano, string culpable, string parcial, Nullable<short> codincidencia, Nullable<System.DateTime> fecha_inc, Nullable<short> bultos, string cambiapor, Nullable<bool> checkDev, Nullable<bool> sobreescribeUltimo)
        {
            var codplaza_orgParameter = codplaza_org.HasValue ?
                new ObjectParameter("codplaza_org", codplaza_org) :
                new ObjectParameter("codplaza_org", typeof(short));
    
            var codexpParameter = codexp.HasValue ?
                new ObjectParameter("codexp", codexp) :
                new ObjectParameter("codexp", typeof(int));
    
            var codestadoParameter = codestado.HasValue ?
                new ObjectParameter("codestado", codestado) :
                new ObjectParameter("codestado", typeof(short));
    
            var informacionParameter = informacion != null ?
                new ObjectParameter("informacion", informacion) :
                new ObjectParameter("informacion", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var codplaza_anoParameter = codplaza_ano.HasValue ?
                new ObjectParameter("codplaza_ano", codplaza_ano) :
                new ObjectParameter("codplaza_ano", typeof(short));
    
            var codusuario_anoParameter = codusuario_ano.HasValue ?
                new ObjectParameter("codusuario_ano", codusuario_ano) :
                new ObjectParameter("codusuario_ano", typeof(int));
    
            var culpableParameter = culpable != null ?
                new ObjectParameter("culpable", culpable) :
                new ObjectParameter("culpable", typeof(string));
    
            var parcialParameter = parcial != null ?
                new ObjectParameter("parcial", parcial) :
                new ObjectParameter("parcial", typeof(string));
    
            var codincidenciaParameter = codincidencia.HasValue ?
                new ObjectParameter("codincidencia", codincidencia) :
                new ObjectParameter("codincidencia", typeof(short));
    
            var fecha_incParameter = fecha_inc.HasValue ?
                new ObjectParameter("fecha_inc", fecha_inc) :
                new ObjectParameter("fecha_inc", typeof(System.DateTime));
    
            var bultosParameter = bultos.HasValue ?
                new ObjectParameter("bultos", bultos) :
                new ObjectParameter("bultos", typeof(short));
    
            var cambiaporParameter = cambiapor != null ?
                new ObjectParameter("cambiapor", cambiapor) :
                new ObjectParameter("cambiapor", typeof(string));
    
            var checkDevParameter = checkDev.HasValue ?
                new ObjectParameter("checkDev", checkDev) :
                new ObjectParameter("checkDev", typeof(bool));
    
            var sobreescribeUltimoParameter = sobreescribeUltimo.HasValue ?
                new ObjectParameter("sobreescribeUltimo", sobreescribeUltimo) :
                new ObjectParameter("sobreescribeUltimo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stpExpInsertaEstado", codplaza_orgParameter, codexpParameter, codestadoParameter, informacionParameter, fechaParameter, codplaza_anoParameter, codusuario_anoParameter, culpableParameter, parcialParameter, codincidenciaParameter, fecha_incParameter, bultosParameter, cambiaporParameter, checkDevParameter, sobreescribeUltimoParameter);
        }
    }
}
